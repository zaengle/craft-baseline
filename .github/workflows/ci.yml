name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@master

      - name: 👨‍💻 Install Composer Dependencies
        uses: php-actions/composer@v6
        with:
          php_version: latest
          args: --profile --ignore-platform-reqs --working-dir=./src

      - name: 🛠 Run PHPStan
        uses: php-actions/phpstan@v3
        with:
          php_version: latest
          memory_limit: 1G
          configuration: ./phpstan.neon

      - name: 🔬 Check ECS
        run: src/vendor/bin/ecs check --ansi

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@master

      - name: 🏗 Set Up Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: 🛠 Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 📦 Cache Node Modules
        uses: actions/cache@v3
        # Use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🧑‍💻 Install JS Dependencies
        run: yarn install

      - name: 🧪 Run JS Tests
        run: yarn test
